<script type="text/javascript" src="path-to-mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<br>
Recuerde que un PEG $G$ es una cuaterna $G =(\Sigma,V,P,S)$.

<pre>
prog   = block DOT

block  = VAR var proc st
       / CONST cons VAR var proc st
       / CONST cons proc st
       / proc st

cons   = ID ASSIGN NUMBER (COMA ID ASSIGN NUMBER)* PYC

var    = ID (COMA ID)* PYC

proc   = (PROCEDURE ID PYC block PYC)*

st     = ID ASSIGN exp
       / CALL ID
       / BEGIN st (PYC st)* END
       / IF cond THEN st ELSE st
       / IF cond THEN st
       / WHILE cond DO st
       
cond   = ODD exp
       / exp COND exp
       
exp    = term   (ADD term)*
term   = factor (MUL factor)*

factor = NUMBER
       / ID
       / LEFTPAR exp RIGHTPAR

_ = $[ \t\n\r]*

ASSIGN   = _ op:'=' _
ADD      = _ op:[+-] _
MUL      = _ op:[*/] _
COND     = _ op:$([&lt;>=!][=]/[&lt;>]) _
LEFTPAR  = _"("_
RIGHTPAR = _")"_
PYC      = _";"_
COMA     = _","_
DOT      = _"."_
CALL     = _ "call" _
BEGIN    = _ "begin" _
END      = _ "end" _
PROCEDURE = _ "procedure" _
CONST    = _ "const" _
VAR      = _ "var" _
IF       = _ "if" _
THEN     = _ "then" _
ELSE     = _ "else" _
WHILE    = _ "while" _
DO       = _ "do" _
ODD      = _ "odd" _
ID       = _ [a-zA-Z_][a-zA-Z_0-9]* _
NUMBER   = _ [0-9]+ _
</pre>
  </ol>
  <li> Expresi&oacute;n de arranque: $prog$
</ol>
<BR>
<BR>
<BR>

